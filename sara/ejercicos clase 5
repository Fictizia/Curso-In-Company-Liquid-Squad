// EJERCICIOS CLASE 5

// 1 - Reorganizar la lista de profesores de Fictizia por nombre y apellidos (alfabético)



var names = document.getElementsByTagName('h4');
var array = [];

for (i=0; i < names.length; i++) {
	var namesText = names[i].firstChild.data;
	array.push(namesText);
}
	console.log(array);
	
array.sort(function (a,b) {
	return a.localeCompare(b);
})

console.log('array ordenado ', array)



// 2 - Saca una lista de los cursos disponibles en Fictizia en las 4 areas de formación y conviertelo en Markdown. Características:
// Cada Bloque de cursos debe estar identificado por el título correspondiente.
// Cada curso debe contener el enlace al mismo y especificar el número de horas entre parentesis.



	var bloque = document.getElementById("trainingAreasTabs").children;

	var cursosPro = document.getElementById('prod3d_TrainingArea').children;
	var cursosDisInt = document.getElementById('web_TrainingArea').children; 
	var cursosDisGra = document.getElementById('design_TrainingArea').children;  
	var cursosFot = document.getElementById('photo_TrainingArea').children;  

	for (i = 0; i < bloque.length; i++) {
		var titulos = bloque[i].innerText;
		console.log(titulos)
	}	


	for (i = 0; i < cursosPro.length; i++) {
		if (cursosPro[i].children[1] !== undefined) {
			var cursosProText = cursosPro[i].children[1].getElementsByTagName('A')[0].innerText;	
			console.log(cursosProText)	
		}
	}


	for (i = 0; i < cursosDisInt.length; i++) {
		if (cursosDisInt[i].children[1] !== undefined) {
			console.log(cursosDisInt[i].children[1].getElementsByTagName('A')[0].innerText)
		}
	}


	for (i = 0; i < cursosDisGra.length; i++) {
		if (cursosDisGra[i].children[1] !== undefined) {
			console.log(cursosDisGra[i].children[1].getElementsByTagName('A')[0].innerText)
		}
	}


	for (i = 0; i < cursosFot.length; i++) {
		if (cursosFot[i].children[1] !== undefined) {
			console.log(cursosFot[i].children[1].getElementsByTagName('A')[0].innerText)
		}
	}




// 3 - Hagamos la web del Metro más divertida. Saca el estado actual de todas las líneas del metro de Madrid por consola.

	var bloquet = document.getElementsByClassName('bloquet');

	for (i = 0; i < bloquet.length; i++) {
		var estado = bloquet[i].childNodes[2].nextSibling.innerText;
		console.log(estado)
	}
	


// 4 - Diseña un script que sustituya todas las imágenes de las entradas de Tecnología del Mundo Today por imágenes dummy de gatitos.

var img = document.getElementsByClassName('entry-thumb td-animation-stack-type0-1')

for (i = 0; i < img.length; i++) {
	var kitten = 'https://fthmb.tqn.com/INZEtkWYEpsZaksoewT_mA4DREo=/960x0/filters:no_upscale()/about/Two-kittens-GettyImages-559292093-58822e4f3df78c2ccd8b318c.jpg';
	var imgSrc = img[i].setAttribute('src', kitten)
}



// 5 - Diseña un script que agrupe todos los titulares, sus autores y categorias dentro de Genbeta:dev y luego vacíe el html para cargar una lista hecha por nosotros con la información previamente recolectada.

var articles = document.getElementsByClassName('abstract-content');


for (i = 0; i < articles.length; i++) {
	var pTit = document.createElement("LI");
	var pAut = document.createElement("LI");
	var pCat = document.createElement("LI");
	var titulares = (articles[i].childNodes[0].nextSibling.childNodes[0].nextSibling.innerText)
	if (articles[i].lastChild.previousSibling.getElementsByTagName('A')[1] !== undefined) {
		var autores = (articles[i].lastChild.previousSibling.getElementsByTagName('A')[1].innerHTML)
	}
	var categorias = (articles[i].childNodes[1].lastChild.previousSibling.innerHTML)
	pTit.innerHTML = titulares;
	pAut.innerHTML = autores;
	pCat.innerHTML = categorias;
	document.body.innerHTML = "";
	document.body.appendChild(pTit);
	document.body.appendChild(pAut);
	document.body.appendChild(pCat);
}




